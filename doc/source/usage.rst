.. _usage:

Usage
=====

.. _format:

Microscopy image format
-----------------------
The NeuCnt3D tool supports RGB or grayscale image stacks in TIF/TIFF format.
Alternatively, a .yml stitch file generated by the ZetaStitcher tool for large volumetric stitching
[`ZetaStitcher GitHub <https://github.com/lens-biophotonics/ZetaStitcher>`_]
may be provided. This .yml file can be obtained following the detailed documentation available at
[`ZetaStitcher Documentation <https://lens-biophotonics.github.io/ZetaStitcher/>`_]
from a collection of 3D stacks composing a tiled image reconstruction.
The .yml and the image stack files must be located within the same directory.
The NeuCnt3D tool exploits the 3D alignment information included in the .yml file
in order to programmatically access and process batches of basic image sub-volumes using parallel processes or threads,
enabling the analysis of high-resolution microscopy reconstructions of considerable extension
even on low resource machines.

Blob detection configuration
----------------------------
The NeuCnt3D tool makes use of the Laplacian of Gaussian (LoG) or the Difference of Gaussian (DoG) blob detection approaches
of the scikit-image library to perform an unsupervised localization of neuronal bodies in volumetric fluorescence
microscopy images [`Blob Detection <https://scikit-image.org/docs/stable/auto_examples/features_detection/plot_blob.html#sphx-glr-auto-examples-features-detection-plot-blob-py>`_].
The targeted soma diameter range can be tuned providing the minimum, maximum and step sizes via CLI:

.. code-block:: console

   $ python -m neuCnt3d ../tiled_img/stitch.yml --min-diam 10 --max-diam 40 --stp-diam 2

The blob detector may be further configured by specifying the maximum percentage overlap between two adjacent blobs,
and the minimum percentage peak intensity relative to the maximum value of the image filtered at the different scales of interest: 

.. code-block:: console

   $ python -m neuCnt3d ../tiled_img/stitch.yml --overlap 50 --thresh 25

The NeuCnt3D tool will compile a .csv log file including the 3D spatial coordinates of the detected cell bodies
along with the radius corresponding to the maximum local response of the multiscale LoG or DoG filters.
Finally, detected cell bodies may also be visualized in the Napari viewer by providing the optional -v flag:

.. code-block:: console

   $ python -m neuCnt3d ../tiled_img/stitch.yml -v
